// RobotBuilder Version: 1.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.
package org.usfirst.frc841.CometFRC2014.subsystems;
import org.usfirst.frc841.CometFRC2014.RobotMap;
import org.usfirst.frc841.CometFRC2014.commands.*;
import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.command.Subsystem;
/**
 *Defines the subsystem for our pneumatic system
 * 
 * @author Josh.Quintero@gmail.com (Joshua Quintero)
 */
public class PneumaticSystem extends Subsystem {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    DigitalInput pressureSwitch = RobotMap.pneumaticSystemPressureSwitch;
    Relay compressor = RobotMap.pneumaticSystemCompressor;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    
    // Put methods for controlling this subsystem
    // here. Call these from Commands.
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
        setDefaultCommand(new Regulate());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
	
        // Set the default command for a subsystem here.
        //setDefaultCommand(new MySpecialCommand());
    }
    //Set Relay reverse to turn the compressor on
    public void TurnCompressorOn(){
        compressor.set(Relay.Value.kReverse);
    }
    //Set Relay off to turn the compressor off
    public void TurnCompressorOff(){
        compressor.set(Relay.Value.kOff);
    }
    //Returns the state of the Pressure Sensor Switch
    public boolean isAtPressure(){
        return pressureSwitch.get();
    } 
    
}
